diff --git a/src/mcmc.c b/src/mcmc.c
index e0412b0..2be4bb3 100644
--- a/src/mcmc.c
+++ b/src/mcmc.c
@@ -1571,11 +1571,11 @@ void MCMC_Root_Time(t_tree *tree, int print)
                 {
                   VELOC_Update_Lk_Velocity_Down(NULL,tree->n_root,tree);
                   VELOC_Update_Lk_Location_Down(NULL,tree->n_root,tree);
-                  new_lnL_loc = (tree->mmod->use_locations == YES) ? LOCATION_Lk(tree->n_root,tree) : 0.0;
+                  new_lnL_seq = (tree->mmod->use_locations == YES) ? LOCATION_Lk(tree->n_root,tree) : 0.0;
                 //   new_lnL_loc = (tree->mmod->use_locations == YES) ? LOCATION_Lk(NULL,tree) : 0.0; /* !!!!!!!!!!!!!!!!! */
                 }
               else
-                new_lnL_loc = (tree->mmod->use_locations == YES) ? LOCATION_Lk(NULL,tree) : 0.0;
+                new_lnL_seq = (tree->mmod->use_locations == YES) ? LOCATION_Lk(NULL,tree) : 0.0;
             }
 
           if(tree->eval_tlnL == YES) new_lnL_time = TIMES_Lk(tree);              
@@ -1618,7 +1618,7 @@ void MCMC_Root_Time(t_tree *tree, int print)
       /* if(tree->aux_tree != NULL) */
         /* { */
           /* PhyML_Printf("\n."); */
-          /* PhyML_Printf("\n. %c [%4d] \n. t: %1f->%1f t1:%f t2: %f \n. r1: %10f->%10f r2: %10f->%10f \n. R: %12f alnL:%10f->%10f[%d] \n. tlnL: %10f->%10f[%d] \n. glnL: %10f->%10f[%d] \n. rlnL: %10f->%10f[%d] \n. tune: %10f hr: %f ratio: %10f K: %10f rate_failed: %d", */
+          /* PhyML_Printf("\n. %c [%4d] \n. t: %1f->%1f t1:%f t2: %f \n. r1: %10f->%10f r2: %10f->%10f \n. R: %12f alnL:%10f->%10f[%d] \n. tlnL: %10f->%10f[%d] ", */
           /*              (tree->aux_tree != NULL) ? '*' : 'X', */
           /*              tree->mcmc->run, */
           /*              t0_cur,t0_new, */
@@ -1627,8 +1627,12 @@ void MCMC_Root_Time(t_tree *tree, int print)
           /*              r2_cur,r2_new, */
           /*              tree->rates->norm_fact, */
           /*              cur_lnL_seq,new_lnL_seq,tree->eval_alnL, */
-          /*              cur_lnL_time,new_lnL_time,tree->eval_glnL, */
-          /*              cur_lnL_loc,new_lnL_loc,tree->eval_glnL, */
+          /*              cur_lnL_time,new_lnL_time,tree->eval_glnL); */
+#ifdef PHYREX
+	  /* PhyML_Printf("\n. glnL: %10f->%10f[%d] ", */
+          /*              cur_lnL_loc,new_lnL_loc,tree->eval_glnL); */
+#endif
+	  /* PhyML_Printf("\n. rlnL: %10f->%10f[%d] \n. tune: %10f hr: %f [%f,%f] [%f,%f,%f] ratio: %10f K: %10f failed: %d", */
           /*              cur_lnL_rate,new_lnL_rate,tree->eval_rlnL, */
           /*              tune, */
           /*              hr, */
